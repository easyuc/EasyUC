load SMC2.
functionality
  SMC2.SMC2Real
  (SMC.SMCReal(KeyExchange.KEReal),
  SMC.SMCReal(KeyExchange.KEReal)).
var text : text.
real.
send
((env_root_addr, 1))@SMC2.SMC2Dir.Pt1.smc_req(([], 1),text)$func.
run.
assert MsgOut
((func ++ [3], 1))@
Forwarding.FwAdv.fw_obs
((func, 1), (func, 2),
 (epdp_pair_univ epdp_port_univ epdp_port_univ).`enc
 ((env_root_addr, 1), ([], 1)))
@((adv, 2))
CtrlAdv.
send ((adv, 2))@Forwarding.FwAdv.fw_ok@((func ++ [3], 1)).
run.
assert MsgOut
((func ++ [4], 1))@
Forwarding.FwAdv.fw_obs
((func, 2), (func, 1), [])
@((adv, 3))
CtrlAdv.
send ((adv, 3))@Forwarding.FwAdv.fw_ok@((func ++ [4], 1)).
run.
assert MsgOut
((func ++ [1], 1))@SMC.SMCAdv.Pt1.ping@((adv, 5))
CtrlAdv.
send ((adv, 5))@SMC.SMCAdv.Pt1.pong@((func ++ [1], 1)).
run.
step prover timeout=3.
run.
assert MsgOut
((func ++ [1; 1; 1], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [1; 1], 1), (func ++ [1; 1], 2),
 epdp_port_port_key_univ.`enc ((func ++ [1], 1), (func ++ [1], 2), g ^ rand))
@((adv, 8))
CtrlAdv.
send ((adv, 8))@Forwarding.FwAdv.fw_ok@((func ++ [1;1;1], 1)).
run.
step prover timeout=3.
run.

step.
(* blocked until simplification hints

trying to deconstruct formula:

epdp_port_port_key_univ.`dec (epdp_port_port_key_univ.`enc
((func ++ [1], 1), (func ++ [1], 2), g ^ rand))




deconstruction by simplification failed.
 
         Trying to simplify by evaluating get_as_Constr




deconstruction failed
*)


assert MsgOut
((func ++ [1; 1; 2], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [1; 1], 2), (func ++ [1; 1], 1), epdp_key_univ.`enc (g ^ rand1))
@((adv, 9))
CtrlAdv.
send ((adv, 9))@Forwarding.FwAdv.fw_ok@((func ++ [1;1;2], 1)).
run.
assert MsgOut
((func ++ [1; 2], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [1], 1), (func ++ [1], 2),
 epdp_port_port_key_univ.`enc ((func, 1), (func, 2), g ^ rand2))
@((adv, 6))
CtrlAdv.
send ((adv, 6))@Forwarding.FwAdv.fw_ok@((func ++ [1;2], 1)).
run.
assert MsgOut
((func, 2))@SMC2.SMC2Dir.Pt2.smc_rsp((env_root_addr, 1), text)@(([], 1))
CtrlEnv.
send (([], 1))@SMC2.SMC2Dir.Pt2.smc_req(text)@((func, 2)).
run.
assert MsgOut
((func ++ [2], 1))@SMC.SMCAdv.Pt1.ping@((adv, 11))
CtrlAdv.
send ((adv, 11))@SMC.SMCAdv.Pt1.pong@((func ++ [2], 1)).
run.
assert MsgOut
((func ++ [2; 1; 1], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [2; 1], 1), (func ++ [2; 1], 2),
 epdp_port_port_key_univ.`enc ((func ++ [2], 1), (func ++ [2], 2), g ^ rand3))
@((adv, 14))
CtrlAdv.
send ((adv, 14))@Forwarding.FwAdv.fw_ok@((func ++ [2;1;1], 1)).
run.
assert MsgOut
((func ++ [2; 1; 2], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [2; 1], 2), (func ++ [2; 1], 1), epdp_key_univ.`enc (g ^ rand4))
@((adv, 15))
CtrlAdv.
send ((adv, 15))@Forwarding.FwAdv.fw_ok@((func ++ [2;1;2], 1)).
run.
assert MsgOut
((func ++ [2; 2], 1))@
Forwarding.FwAdv.fw_obs
((func ++ [2], 1), (func ++ [2], 2),
 epdp_port_port_key_univ.`enc ((func, 2), (func, 1), g ^ rand5))
@((adv, 12))
CtrlAdv.
send ((adv, 12))@Forwarding.FwAdv.fw_ok@((func ++ [2;2], 1)).
run.
assert MsgOut
((func, 1))@SMC2.SMC2Dir.Pt1.smc_rsp(text)@(([], 1))
CtrlEnv.

